upstream backend {
    # the Netdata server
    server 127.0.0.1:19999;
    keepalive 1024;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    http3 on;
    quic_retry on;
    ssl_early_data on;
    quic_gso on;
    server_name netdat.imnot.uk;

    # Enable compression
    # gzip on;
    # gzip_proxied any;
    # gzip_types *;

    auth_basic "Protected";
    auth_basic_user_file passwords;


    # Restrict access to sensitive files
    location ~ /\.(ht|git|svn|env|DS_Store|dockerignore|backup) {
        deny all;
        return 404;
    }

    # Prevent PHP execution in specific locations
    location ~* /(uploads|files|images|temp)/.*\.php$ {
        deny all;
    }

    include /etc/nginx/default.d/*.conf;

    if ($request_method !~ ^(GET|POST|HEAD|PUT|DELETE|OPTIONS|PATCH)$) {
        return 405;
    }

    if ($http_user_agent ~* (sqlmap|curl|wget|python|nikto|nmap|fuzz|scanner|bot)) {
        return 403;
    }

    if ($http_user_agent = "") {
        return 403;
    }


    if ($server_protocol !~ "^(HTTP/1\.0|HTTP/1\.1|HTTP/2\.0|HTTP/3)$") {
        return 400;
    }

    location / {
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_pass_request_headers on;
        proxy_set_header Connection "keep-alive";
        proxy_store off;
        proxy_set_header X-Forwarded-Proto https;
        proxy_pass http://localhost:19999;
        proxy_cache my_cache;
        proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
        proxy_cache_valid 200 1m;  # Short cache for dynamic content
        add_header Cache-Control "public, no-cache, must-revalidate";
    }

    # Static assets caching
    location ~* \.(css|js|jpg|jpeg|png|gif|ico|webp|svg)$ {
        proxy_cache my_cache;
        proxy_cache_valid 200 60m;
        add_header Cache-Control "public, max-age=3600";
        expires 1h;
    }
}
