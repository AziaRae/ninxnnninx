server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    http3 on;
    quic_retry on;
    ssl_early_data on;
    quic_gso on;
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    ssl_dhparam /etc/nginx/dhparam.pem; 
    ssl_verify_client on;
    ssl_client_certificate /etc/nginx/ssl/cloudflare.crt;
    
    # HTTP/3 and QUIC settings
    add_header Alt-Svc 'h3=":443"; ma=86400' always;

    gzip on;
    gunzip on;
    gzip_static on;

    set $server "127.0.0.1";
    set $port "5000";
    #set $organizr "organizr.example.com"; #Uncomment this for organizr support
    server_name library.imnot.uk kavikav.imnot.uk;

    # Add this map at server level
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    location / {
        # The following configurations must be configured when proxying to Kavita
        # Host and X headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        aio threads;
        proxy_set_header X-Forwarded-Proto $scheme;
        # Headers to proxy websocket connections
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_read_timeout 300s;
        # Proxy to Kavita running locally on port 5000 using ssl
        proxy_pass http://$server:$port;

        # HTTP/2 and HTTP/3 support
        http2_push_preload on;
        add_header Alt-Svc 'h3=":443"; ma=86400';

        add_header Cache-Control "private, no-store, no-cache, must-revalidate, proxy-revalidate";
    }

    # Handle both regular static assets and chunk files
    location ~* (\.(css|js|jpg|jpeg|png|gif|ico|webp|svg)$|^/chunk-[A-Za-z0-9]+\.js$) {
        proxy_pass http://$server:$port;
        # Use HTTP/2 for static assets
        http2_push_preload on;
        
        # Keep existing configurations
        proxy_cache my_cache;
        proxy_cache_valid 200 30d;
        proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
        
        # Prevent HTTP/2 stream errors
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        keepalive_requests 100;
        keepalive_timeout 65s;
        
        add_header Cache-Control "public, max-age=2592000, must-revalidate, proxy-revalidate";
        add_header Vary Accept-Encoding;
        expires 30d;
        
        # Add debug headers
        add_header X-Cache-Status $upstream_cache_status;
        add_header X-Cache-Key $request_uri;
        
        # Try files locally first
        try_files $uri @proxy;
    }

    # Fallback location for proxied requests
    location @proxy {
        proxy_pass http://$server:$port;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Media files caching
    location ~* \.(cbz|cbr|pdf|epub)$ {
        proxy_cache my_cache;
        proxy_cache_valid 200 30d;
        add_header Cache-Control "public, max-age=2592000, must-revalidate, proxy-revalidate";
        expires 30d;
    }
}
